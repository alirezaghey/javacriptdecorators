{
  "type": "Program",
  "start": 0,
  "end": 439,
  "body": [
    {
      "type": "VariableDeclaration",
      "start": 0,
      "end": 19,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 6,
          "end": 18,
          "id": {
            "type": "Identifier",
            "start": 6,
            "end": 7,
            "name": "P"
          },
          "init": {
            "type": "CallExpression",
            "start": 10,
            "end": 18,
            "callee": {
              "type": "Identifier",
              "start": 10,
              "end": 16,
              "name": "Symbol"
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 21,
      "end": 40,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 27,
          "end": 39,
          "id": {
            "type": "Identifier",
            "start": 27,
            "end": 28,
            "name": "M"
          },
          "init": {
            "type": "CallExpression",
            "start": 31,
            "end": 39,
            "callee": {
              "type": "Identifier",
              "start": 31,
              "end": 37,
              "name": "Symbol"
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "VariableDeclaration",
      "start": 42,
      "end": 61,
      "declarations": [
        {
          "type": "VariableDeclarator",
          "start": 48,
          "end": 60,
          "id": {
            "type": "Identifier",
            "start": 48,
            "end": 49,
            "name": "G"
          },
          "init": {
            "type": "CallExpression",
            "start": 52,
            "end": 60,
            "callee": {
              "type": "Identifier",
              "start": 52,
              "end": 58,
              "name": "Symbol"
            },
            "arguments": [],
            "optional": false
          }
        }
      ],
      "kind": "const"
    },
    {
      "type": "ClassDeclaration",
      "start": 65,
      "end": 242,
      "id": {
        "type": "Identifier",
        "start": 71,
        "end": 72,
        "name": "C"
      },
      "superClass": null,
      "body": {
        "type": "ClassBody",
        "start": 73,
        "end": 242,
        "body": [
          {
            "type": "ClassProperty",
            "start": 78,
            "end": 93,
            "static": true,
            "computed": true,
            "key": {
              "type": "Identifier",
              "start": 86,
              "end": 87,
              "name": "P"
            },
            "value": {
              "type": "Literal",
              "start": 91,
              "end": 93,
              "value": 10,
              "raw": "10"
            }
          },
          {
            "type": "MethodDefinition",
            "start": 98,
            "end": 138,
            "kind": "method",
            "static": true,
            "computed": true,
            "key": {
              "type": "Identifier",
              "start": 106,
              "end": 107,
              "name": "M"
            },
            "value": {
              "type": "FunctionExpression",
              "start": 108,
              "end": 138,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 111,
                "end": 138,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 118,
                    "end": 133,
                    "argument": {
                      "type": "MemberExpression",
                      "start": 125,
                      "end": 132,
                      "object": {
                        "type": "ThisExpression",
                        "start": 125,
                        "end": 129
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 130,
                        "end": 131,
                        "name": "P"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                ]
              }
            }
          },
          {
            "type": "MethodDefinition",
            "start": 142,
            "end": 186,
            "kind": "get",
            "static": true,
            "computed": true,
            "key": {
              "type": "Identifier",
              "start": 154,
              "end": 155,
              "name": "G"
            },
            "value": {
              "type": "FunctionExpression",
              "start": 156,
              "end": 186,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [],
              "body": {
                "type": "BlockStatement",
                "start": 159,
                "end": 186,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 166,
                    "end": 181,
                    "argument": {
                      "type": "MemberExpression",
                      "start": 173,
                      "end": 180,
                      "object": {
                        "type": "ThisExpression",
                        "start": 173,
                        "end": 177
                      },
                      "property": {
                        "type": "Identifier",
                        "start": 178,
                        "end": 179,
                        "name": "P"
                      },
                      "computed": true,
                      "optional": false
                    }
                  }
                ]
              }
            }
          },
          {
            "type": "MethodDefinition",
            "start": 190,
            "end": 239,
            "kind": "set",
            "static": true,
            "computed": true,
            "key": {
              "type": "Identifier",
              "start": 202,
              "end": 203,
              "name": "G"
            },
            "value": {
              "type": "FunctionExpression",
              "start": 204,
              "end": 239,
              "id": null,
              "expression": false,
              "generator": false,
              "async": false,
              "params": [
                {
                  "type": "Identifier",
                  "start": 205,
                  "end": 206,
                  "name": "v"
                }
              ],
              "body": {
                "type": "BlockStatement",
                "start": 208,
                "end": 239,
                "body": [
                  {
                    "type": "ReturnStatement",
                    "start": 215,
                    "end": 234,
                    "argument": {
                      "type": "AssignmentExpression",
                      "start": 222,
                      "end": 233,
                      "operator": "=",
                      "left": {
                        "type": "MemberExpression",
                        "start": 222,
                        "end": 229,
                        "object": {
                          "type": "ThisExpression",
                          "start": 222,
                          "end": 226
                        },
                        "property": {
                          "type": "Identifier",
                          "start": 227,
                          "end": 228,
                          "name": "P"
                        },
                        "computed": true,
                        "optional": false
                      },
                      "right": {
                        "type": "Identifier",
                        "start": 232,
                        "end": 233,
                        "name": "v"
                      }
                    }
                  }
                ]
              }
            }
          }
        ]
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 246,
      "end": 289,
      "expression": {
        "type": "CallExpression",
        "start": 246,
        "end": 288,
        "callee": {
          "type": "MemberExpression",
          "start": 246,
          "end": 260,
          "object": {
            "type": "Identifier",
            "start": 246,
            "end": 253,
            "name": "console"
          },
          "property": {
            "type": "Identifier",
            "start": 254,
            "end": 260,
            "name": "assert"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 261,
            "end": 272,
            "left": {
              "type": "MemberExpression",
              "start": 261,
              "end": 265,
              "object": {
                "type": "Identifier",
                "start": 261,
                "end": 262,
                "name": "C"
              },
              "property": {
                "type": "Identifier",
                "start": 263,
                "end": 264,
                "name": "P"
              },
              "computed": true,
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 270,
              "end": 272,
              "value": 10,
              "raw": "10"
            }
          },
          {
            "type": "Literal",
            "start": 274,
            "end": 287,
            "value": "c[P] === 10",
            "raw": "'c[P] === 10'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 291,
      "end": 338,
      "expression": {
        "type": "CallExpression",
        "start": 291,
        "end": 337,
        "callee": {
          "type": "MemberExpression",
          "start": 291,
          "end": 305,
          "object": {
            "type": "Identifier",
            "start": 291,
            "end": 298,
            "name": "console"
          },
          "property": {
            "type": "Identifier",
            "start": 299,
            "end": 305,
            "name": "assert"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 306,
            "end": 319,
            "left": {
              "type": "CallExpression",
              "start": 306,
              "end": 312,
              "callee": {
                "type": "MemberExpression",
                "start": 306,
                "end": 310,
                "object": {
                  "type": "Identifier",
                  "start": 306,
                  "end": 307,
                  "name": "C"
                },
                "property": {
                  "type": "Identifier",
                  "start": 308,
                  "end": 309,
                  "name": "M"
                },
                "computed": true,
                "optional": false
              },
              "arguments": [],
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 317,
              "end": 319,
              "value": 10,
              "raw": "10"
            }
          },
          {
            "type": "Literal",
            "start": 321,
            "end": 336,
            "value": "c[M]() === 10",
            "raw": "'c[M]() === 10'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 340,
      "end": 349,
      "expression": {
        "type": "AssignmentExpression",
        "start": 340,
        "end": 349,
        "operator": "=",
        "left": {
          "type": "MemberExpression",
          "start": 340,
          "end": 344,
          "object": {
            "type": "Identifier",
            "start": 340,
            "end": 341,
            "name": "C"
          },
          "property": {
            "type": "Identifier",
            "start": 342,
            "end": 343,
            "name": "G"
          },
          "computed": true,
          "optional": false
        },
        "right": {
          "type": "Literal",
          "start": 347,
          "end": 349,
          "value": 20,
          "raw": "20"
        }
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 351,
      "end": 394,
      "expression": {
        "type": "CallExpression",
        "start": 351,
        "end": 393,
        "callee": {
          "type": "MemberExpression",
          "start": 351,
          "end": 365,
          "object": {
            "type": "Identifier",
            "start": 351,
            "end": 358,
            "name": "console"
          },
          "property": {
            "type": "Identifier",
            "start": 359,
            "end": 365,
            "name": "assert"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 366,
            "end": 377,
            "left": {
              "type": "MemberExpression",
              "start": 366,
              "end": 370,
              "object": {
                "type": "Identifier",
                "start": 366,
                "end": 367,
                "name": "C"
              },
              "property": {
                "type": "Identifier",
                "start": 368,
                "end": 369,
                "name": "G"
              },
              "computed": true,
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 375,
              "end": 377,
              "value": 20,
              "raw": "20"
            }
          },
          {
            "type": "Literal",
            "start": 379,
            "end": 392,
            "value": "c[G] === 20",
            "raw": "'c[G] === 20'"
          }
        ],
        "optional": false
      }
    },
    {
      "type": "ExpressionStatement",
      "start": 396,
      "end": 439,
      "expression": {
        "type": "CallExpression",
        "start": 396,
        "end": 438,
        "callee": {
          "type": "MemberExpression",
          "start": 396,
          "end": 410,
          "object": {
            "type": "Identifier",
            "start": 396,
            "end": 403,
            "name": "console"
          },
          "property": {
            "type": "Identifier",
            "start": 404,
            "end": 410,
            "name": "assert"
          },
          "computed": false,
          "optional": false
        },
        "arguments": [
          {
            "type": "BinaryExpression",
            "start": 411,
            "end": 422,
            "left": {
              "type": "MemberExpression",
              "start": 411,
              "end": 415,
              "object": {
                "type": "Identifier",
                "start": 411,
                "end": 412,
                "name": "C"
              },
              "property": {
                "type": "Identifier",
                "start": 413,
                "end": 414,
                "name": "P"
              },
              "computed": true,
              "optional": false
            },
            "operator": "===",
            "right": {
              "type": "Literal",
              "start": 420,
              "end": 422,
              "value": 20,
              "raw": "20"
            }
          },
          {
            "type": "Literal",
            "start": 424,
            "end": 437,
            "value": "c[P] === 20",
            "raw": "'c[P] === 20'"
          }
        ],
        "optional": false
      }
    }
  ],
  "sourceType": "script"
}